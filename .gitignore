; 1. Определите макрос, который возвращает свой вызов

(defmacro mac (x)

  `'(mac ,x)

)



(print(mac a)) ; (mac a)
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

; 2) Определить макрос pop-stack



(defmacro pop-stack (stack)

	`(let ((first))

		(setq first (car ,stack))

		(setq ,stack (cdr ,stack))

		first

	)

)



(setq stack `(1 2 3))



(print (pop-stack stack)) ; 1

(print (pop-stack stack)) ; 2

(print (pop-stack stack)) ; 3
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
;3. Определите лисповскую форму (IF условие p q) в виде макроса.

(defmacro My-If (condition then else)

   `(cond 

           (,condition ,then)

           (t ,else)

    )

)

 
(print(My-If (> 15 6) 'p 'q)) ; P

(print(My-If (> 6 15) 'p 'q)) ; Q
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
:4 Определите в виде макроса форму (FIF тест отр нуль полож). 

(defmacro FIF (condition negative zero positive)

    `(let ((con ,condition) (neg ,negative) (zer ,zero) (pos ,positive))

          (cond ((zerop con) zer)

                ((minusp con) neg)

                (t pos)

          )

     )

)


(print(FIF (* -3 5) 'less 'equal 'more)) ;LESS 

(print(FIF (- 5 3) 'less 'equal 'more)) ;MORE 




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
;5. Определите в виде макроса форму (REPEAT e UNTIL p) паскалевского типа.

(defmacro repeat (body condition)

    `(cond(,condition nil)

          (t(and(print ,body)(repeat ,body ,condition)))

     ) 

)



(setq i 10)

(repeat (setq  i (- i 1)) (equal i 0))


;9 

;8 

;7 

;6 

;5 

;4 

;3 

;2 

;1 

;0

(print (MACROEXPAND `(repeat (setq  i (- i 1)) (equal i 0))))

;(IF (EQUAL I 0) NIL

;(AND (PRINT (SETQ I (- I 1))) (REPEAT (SETQ I (- I 1)) (EQUAL I 0)))) 
